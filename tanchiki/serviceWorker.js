const r=self,s="tanchiki-cache-1",a=["/","/index.html"],h=["document","script","style","font","image","audio","object"],o=`
  <h1>\u0418\u043D\u0442\u0435\u0440\u043D\u0435\u0442\u044B \u0443\u043F\u0430\u043B\u0438! \u041D\u043E \u044D\u0442\u043E \u043D\u0435\u0442\u043E\u0447\u043D\u043E.</h1>
  <h2>\u041D\u0430\u0434\u043E \u0431\u044B \u043E\u0431\u043D\u043E\u0432\u0438\u0442\u044C \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u0443...</h2>
`,c={headers:{"Content-Type":"text/html; charset=utf-8"}};r.addEventListener("install",u=>{console.log("SW: installing",u),u.waitUntil(caches.open(s).then(t=>t.addAll(a)).then(()=>{r.skipWaiting(),console.log("SW: cache added & skipped waiting")}))});r.addEventListener("activate",u=>{console.log("SW: activating",u),u.waitUntil(r.clients.claim())});r.addEventListener("fetch",u=>{console.log("SW: fetch",u.request.destination,u),h.includes(u.request.destination)&&(!u.request.url.match(/^http/)||u.respondWith(caches.open(s).then(t=>t.match(u.request).then(e=>{const i=fetch(u.request).then(n=>(n.status===200&&t.put(u.request,n.clone()).catch(l=>{console.warn("SW: cache put error",l)}),n)).catch(n=>(console.warn("SW: network problem",n),e!=null?e:new Response(o,c)));return e?(console.log("SW: return cached response",u.request.url),e):(console.log("SW: return network response",u.request.url),i)})).catch(t=>(console.warn("SW: cache open error",t),new Response(o,c)))))});
